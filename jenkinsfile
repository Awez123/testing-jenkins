pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: devops
      image: amazon/aws-cli
      command: ['sleep']
      args: ['99d']
      tty: true
  restartPolicy: Never
"""
      defaultContainer 'devops'
    }
  }

  environment {
    AWS_REGION = 'ap-south-1'
    CLUSTER_NAME = 'hh-stg-eks'
  }

  stages {
    stage('Clone Repo') {
      steps {
        git 'https://github.com/Awez123/testing-jenkins.git'
      }
    }

    stage('Install Helm') {
      steps {
        sh '''
          echo "ðŸŽ¯ Installing Helm..."
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version
        '''
      }
    }

    stage('Configure kubeconfig') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'jenkinsuser']]) {
          sh '''
            echo "ðŸ”§ Setting up AWS CLI and kubeconfig..."
            aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME
            kubectl version --short
          '''
        }
      }
    }

    stage('Deploy NGINX') {
      steps {
        sh '''
          echo "ðŸš€ Deploying NGINX..."
          helm upgrade --install my-nginx ./nginx --namespace test --create-namespace
        '''
      }
    }

    stage('Deploy Prometheus') {
      steps {
        sh '''
          echo "ðŸ“Š Deploying Prometheus..."
          helm upgrade --install my-prometheus ./prometheus --namespace test --create-namespace
        '''
      }
    }
  }
}
