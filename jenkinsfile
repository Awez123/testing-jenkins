pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: devops
      image: bitnami/kubectl:latest
      command:
        - cat
      tty: true
  restartPolicy: Never
"""
      defaultContainer 'devops'
    }
  }

  environment {
    AWS_REGION = 'ap-south-1'
    CLUSTER_NAME = 'hh-stg-eks'
  }

  stages {
    stage('Clone Repo') {
      steps {
        git 'https://github.com/Awez123/testing-jenkins.git'
      }
    }

    stage('Install AWS CLI') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'jenkinsuser']]) {
          sh '''
            apt update && apt install -y curl tar unzip less groff
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.tar.gz" -o "awscliv2.tar.gz"
            tar -xvzf awscliv2.tar.gz
            ./aws/install
            aws --version
          '''
        }
      }
    }

    stage('Configure Kubeconfig') {
      steps {
        sh 'aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME'
      }
    }

    stage('Deploy NGINX') {
      steps {
        sh 'helm upgrade --install my-nginx ./nginx --namespace test --create-namespace'
      }
    }

    stage('Deploy Prometheus') {
      steps {
        sh 'helm upgrade --install my-prometheus ./prometheus --namespace test --create-namespace'
      }
    }
  }
}
